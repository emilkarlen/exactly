#
# Since each test is executed in a temporary sandbox directory structure,
# [setup] may create files and directories in it.
#
# The "act" directory is the current directory when [setup] starts,
# (and remains the current directory until it is changed with
# the "cd" instruction).
#
# This case tests a program that classifies files as either good or bad,
# and moves them to a corresponding directory.
#

[setup]


dir input-files
dir output-files/good
dir output-files/bad

file input-files/a-good-file.txt = <<EOF
GOOD contents
EOF

file input-files/a-bad-file.txt = <<EOF
bad contents
EOF


[act]


# The SUT is given the current directory as argument ("."),
# which is the "act" directory inside the sandbox:

classify-files-by-moving-to-appropriate-dir GOOD input-files output-files


[assert]


exit-code == 0


'All files should have been processed'

dir-contents input-files empty



# Check good files


'Correct detection of good file'

exists output-files/good/a-good-file.txt : type file

'The dir for good files should contain only the file found to be good'

dir-contents output-files/good num-files == 1



# Check bad files


'Correct detection of bad file'

exists output-files/bad/a-bad-file.txt : type file

'The dir for bad files should contain only the file found to be bad'

dir-contents output-files/bad num-files == 1



