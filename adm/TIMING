-*- org -*-


* Planering
  CLOCK: [2014-12-30 tis 22:34]--[2014-12-30 tis 22:45] =>  0:11
* Kravspec
  CLOCK: [2014-12-26 fre 21:07]--[2014-12-26 fre 23:20] =>  2:13
  CLOCK: [2014-12-26 fre 18:41]--[2014-12-26 fre 20:01] =>  1:20
  CLOCK: [2014-12-26 fre 11:06]--[2014-12-26 fre 12:07] =>  1:01
  CLOCK: [2014-12-26 fre 10:52]--[2014-12-26 fre 11:02] =>  0:10
  CLOCK: [2014-12-26 fre 10:22]--[2014-12-26 fre 10:46] =>  0:24

* Python prj org
  CLOCK: [2014-12-28 sön 12:14]--[2014-12-28 sön 15:02] =>  2:48
  CLOCK: [2014-12-27 lör 15:35]--[2014-12-27 lör 16:31] =>  0:56
  CLOCK: [2014-12-27 lör 08:11]--[2014-12-27 lör 09:55] =>  1:44
* Grundstomme
** Funktionalitet för att parsa
   CLOCK: [2014-12-30 tis 22:35]--[2014-12-30 tis 23:41] =>  1:06
   CLOCK: [2014-12-30 tis 22:00]--[2014-12-30 tis 22:34] =>  0:34
   CLOCK: [2014-12-30 tis 08:36]--[2014-12-30 tis 12:03] =>  3:27
   CLOCK: [2014-12-29 mån 21:28]--[2014-12-30 tis 06:36] => 09:08
   CLOCK: [2014-12-29 mån 13:19]--[2014-12-29 mån 16:19] =>  3:0
Funktion för parsning som tar som argument uppsättningen av instruktioner per
steg.
Validera:
*** valida steg-identiferare ("setup", "apply", ...)
*** steget apply har en eller flera instruktioner
*** steget assert har en eller flera instruktioner
*** steg kan återkomma (setup ... apply ... setup) och instruktioner accumuleras i rätt ordning
*** instruktioner för ett givet steg är verkligen tillgängliga enbart för detta steg
*** kommentarer tas med som pseudo-instruktioner
** InstructionParser som kan parsa flera olika instruktioner
Fundera på om tanken med "behållare" separerade av punkt ska användas.
** Validering av parsat TestCase
Abstrakt metod hos Instruction som tar som argument någon form av omgivning.
Obs! Omgivningen måste kunna modifieras av instruktioner, t ex "home",
"stdin" (ev kan "stdin" sättas per fas - dvs det är en omgivning som finns per
fas).
** Generering av script utifrån validerat TestCase och omgivning
Omgivningen är den som används/är resultatet från valideringen.
** Exekvering av testfall inkl preprocessning
Skriv en enkel preprocessor (py-pgm som, t ex, konv versal -> gemen).
Testfallet sparar en sträng i en fil som sedan preprocessas.
Invokera programmet, t ex:
python3 shelltest/main.py --preprocess 'python3 convert-to-lowercse.py'
--stop-after preprocess

Detta
- ger ett program med main-metod och cla-parsning
- "mall" för ett testfall som exekverar ett externt program med in och utdata
  i fil
* Exekvera instruktioner
  CLOCK: [2015-01-01 tor 21:31]--[2015-01-01 tor 22:08] =>  0:37
  CLOCK: [2015-01-01 tor 14:44]--[2015-01-01 tor 16:57] =>  2:13

* Exekvera tesfall
  CLOCK: [2015-01-03 lör 19:30]--[2015-01-03 lör 19:57] =>  0:27
  CLOCK: [2015-01-03 lör 16:39]--[2015-01-03 lör 17:45] =>  1:06
  CLOCK: [2015-01-02 fre 20:35]--[2015-01-02 fre 23:19] =>  2:44
  CLOCK: [2015-01-02 fre 14:39]--[2015-01-02 fre 16:31] =>  1:52
  CLOCK: [2015-01-02 fre 11:21]--[2015-01-02 fre 11:56] =>  0:35
  CLOCK: [2015-01-02 fre 08:52]--[2015-01-02 fre 09:49] =>  0:57
  CLOCK: [2015-01-02 fre 08:17]--[2015-01-02 fre 08:52] =>  0:35

* Exekvera testfall i katalogstruktur
  CLOCK: [2015-01-06 tis 08:40]--[2015-01-06 tis 09:24] =>  0:44
  CLOCK: [2015-01-06 tis 00:27]--[2015-01-06 tis 00:51] =>  0:24
  CLOCK: [2015-01-05 mån 19:14]--[2015-01-05 mån 20:41] =>  1:27
  CLOCK: [2015-01-05 mån 16:03]--[2015-01-05 mån 18:55] =>  2:52
  CLOCK: [2015-01-05 mån 12:59]--[2015-01-05 mån 15:20] =>  2:21
  CLOCK: [2015-01-05 mån 01:10]--[2015-01-05 mån 02:11] =>  1:01
  CLOCK: [2015-01-04 sön 21:09]--[2015-01-04 sön 22:59] =>  1:50
  CLOCK: [2015-01-04 sön 17:18]--[2015-01-04 sön 19:38] =>  2:20
  CLOCK: [2015-01-04 sön 14:12]--[2015-01-04 sön 16:53] =>  2:41
  CLOCK: [2015-01-04 sön 11:06]--[2015-01-04 sön 13:09] =>  2:03
  CLOCK: [2015-01-03 lör 21:14]--[2015-01-04 sön 00:31] =>  3:17
* Exitkod
  CLOCK: [2015-04-15 ons 16:25]--[2015-04-15 ons 17:55] =>  1:30
  CLOCK: [2015-04-14 tis 20:30]--[2015-04-14 tis 21:43] =>  1:13
  CLOCK: [2015-04-13 mån 19:14]--[2015-04-13 mån 20:19] =>  1:05
* Komma igång efter uppehåll
  CLOCK: [2015-04-13 mån 18:48]--[2015-04-13 mån 18:59] =>  0:11
  CLOCK: [2015-04-12 sön 14:03]--[2015-04-12 sön 16:32] =>  2:29

* Refaktoreringar
  CLOCK: [2015-04-28 tis 19:30]--[2015-04-29 ons 00:29] =>  4:59
  CLOCK: [2015-04-28 tis 16:34]--[2015-04-28 tis 18:47] =>  2:13
  CLOCK: [2015-04-28 tis 11:00]--[2015-04-28 tis 12:14] =>  1:14
  CLOCK: [2015-04-27 mån 14:27]--[2015-04-27 mån 22:49] =>  8:22
  CLOCK: [2015-04-24 fre 09:35]--[2015-04-24 fre 15:39] =>  6:04
  CLOCK: [2015-04-23 tor 19:01]--[2015-04-23 tor 21:01] =>  2:00

* Tmp-directory
  CLOCK: [2015-05-01 fre 14:18]--[2015-05-01 fre 14:52] =>  0:34

