#!/bin/bash

HERE=$(dirname $0)
EXE_NAME=$(basename $0)

DOCKER_IMAGE_PREFIX='alpine-py'

function abs_path_of_repo_root() (
  cd ${HERE}/../..
  pwd
)

REPO_ROOT_DIR=$(abs_path_of_repo_root)

SHARE_DIR=/tmp/exactly-docker-share

REPO_ROOT_IN_CONTAINER=/app/exactly
SHARE_DIR_IN_CONTAINER=/share

HELP="${EXE_NAME} (-h|PY-VERSION)

PY-VERSION is one of: 35 36 37 38 39

Starts the docker container ${DOCKER_IMAGE_PREFIX}<PY-VERSION>

with the Exactly repo (that contains this file) mounted inside the container (read-only) at

  ${REPO_ROOT_IN_CONTAINER}

and a shared dir (${SHARE_DIR}) mounted (read-write) at

  ${SHARE_DIR_IN_CONTAINER}

${SHARE_DIR} is created if it does not exist.

Use program
  copy-repo ${REPO_ROOT_IN_CONTAINER} DST-DIR
to copy an Exactly repository.

To work as non-root:

  > su - developer"

if [ "${1}" == '-h' ]; then
  echo "${HELP}"
  exit 0
fi

if [ "${#}" != '1' ]; then
  echo "${HELP}"
  exit 0
fi

PY_V=${1}

if [ "${PY_V}" != '35' -a "${PY_V}" != '36' -a "${PY_V}" != '37' -a "${PY_V}" != '38' -a "${PY_V}" != '39' ]; then
  echo "Unknown Python version: ${PY_V}" >&2
  exit 1
fi

DOCKER_IMAGE="${DOCKER_IMAGE_PREFIX}${PY_V}:latest"

if [ -e ${SHARE_DIR} ]; then
  if [ ! -d ${SHARE_DIR} ]; then
    echo "Not a directory: ${SHARE_DIR}" >&2
    exit 1
  fi
else
  mkdir ${SHARE_DIR}
fi

docker run --interactive --tty \
  --mount readonly,type=bind,source=${REPO_ROOT_DIR},target=${REPO_ROOT_IN_CONTAINER} \
  --mount type=bind,source=${SHARE_DIR},target=${SHARE_DIR_IN_CONTAINER} \
  ${DOCKER_IMAGE}
