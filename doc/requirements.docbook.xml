<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:ns5="http://www.w3.org/1999/xhtml"
      xmlns:ns4="http://www.w3.org/1998/Math/MathML"
      xmlns:ns3="http://www.w3.org/2000/svg"
      xmlns:ns="http://docbook.org/ns/docbook">
  <info>
    <title>Requirements</title>

    <author>
      <personname><firstname>Emil</firstname><surname>Karlén</surname></personname>
    </author>
  </info>

  <chapter>
    <title>DocBook Usage</title>

    <itemizedlist>
      <listitem>
        <para>Terms and definitions</para>

        <para>Wrapped in <tag class="element">firstterm</tag> and <tag
        class="element">glossterm</tag> elements.</para>
      </listitem>

      <listitem>
        <para>Files and directories</para>

        <para>Wrapped in <tag class="element">filename</tag> elements.
        Directories have the attribute <tag class="attribute">class</tag> set
        to "directory".</para>
      </listitem>

      <listitem>
        <para>Executable</para>

        <para>Wrapped in <tag class="element">command</tag> elements.</para>
      </listitem>

      <listitem>
        <para>Phases</para>

        <para>Wrapped in <tag class="element">systemitem</tag>
        elements.</para>
      </listitem>

      <listitem>
        <para>Test Case Execution result codes</para>
      </listitem>

      <listitem>
        <para>Instructions</para>

        <para>Wrapped in <tag class="element">command</tag> elements, with the
        <tag class="attribute">attribute</tag> role set to
        "instruction".</para>
      </listitem>

      <listitem>
        <para>Environment variables</para>

        <para>Wrapped in <tag>envar</tag>.</para>
      </listitem>
    </itemizedlist>
  </chapter>

  <chapter>
    <title>Definitions</title>

    <section>
      <title>Test Case Results</title>

      <para>Concepts are taken from <link
      xlink:href="https://www.gnu.org/software/automake/manual/html_node/Generalities-about-Testing.html#Generalities-about-Testing">automake:
      Generalities about Testing</link>.</para>

      <para>Exit codes are taken from <link
      xlink:href="https://www.gnu.org/software/automake/manual/html_node/Scripts_002dbased-Testsuites.html#Scripts_002dbased-Testsuites">automake:
      Scripts-based Testsuites</link>.</para>

      <variablelist>
        <varlistentry>
          <term><constant>PASS</constant></term>

          <listitem>
            <para><quote>the condition or behaviour it means to verify
            holds</quote></para>

            <para>Exit code: 0</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>FAIL</constant></term>

          <listitem>
            <para>the condition or behaviour it means to verify does not
            hold</para>

            <para>Exit code: any code not used by a different result</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>SKIPPED</constant></term>

          <listitem>
            <para>the test case is ignored</para>

            <para>Exit code: 77</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>XFAIL</constant></term>

          <listitem>
            <para>the result is FAIL, but this was expected</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>XPASS</constant></term>

          <listitem>
            <para>the result is PASS, but XFAIL was expected</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>HARD ERROR</constant></term>

          <listitem>
            <para>there was an error in arranging the test so non of the other
            result can be derived</para>

            <para>Exit code: 99</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Test Case Phases</title>

      <variablelist>
        <varlistentry>
          <term><systemitem>setup</systemitem></term>

          <listitem>
            <para>Constructs the environment that the target expects.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>act</systemitem></term>

          <listitem>
            <para>The program that is tested, in the environment set up by
            <systemitem>setup</systemitem>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>assert</systemitem></term>

          <listitem>
            <para>Tests whether the target has behaved expectedly.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><systemitem>cleanup</systemitem></term>

          <listitem>
            <para>Destructs resources that has been previously constructed,
            and that are not automatically destructed.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Test Case Execution Directories</title>

      <para>A temporary directory structure is used for the execution of each
      test case. This structure is called the <firstterm>execution directory
      structure</firstterm> .This structure is as follows.</para>

      <variablelist>
        <varlistentry>
          <term><filename class="directory">result</filename></term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term><filename class="directory">std</filename></term>

                <listitem>
                  <para>Contains output from stdout and stderr produced by
                  instructions of the <systemitem>act</systemitem>
                  phase.</para>

                  <variablelist>
                    <varlistentry>
                      <term><filename>out</filename></term>

                      <listitem>
                        <para>Output from stdout.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term><filename>err</filename></term>

                      <listitem>
                        <para>Output from stderr.</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>exitcode</filename></term>

                <listitem>
                  <para>Contains the exit code.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename class="directory">test</filename></term>

          <listitem>
            <para>Directory that is the (initial) Present Working Directory
            for all phases of the test case (<systemitem>setup</systemitem>,
            <systemitem>act</systemitem>, ...).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename class="directory">testcase</filename></term>

          <listitem>
            <para>The test case, transformed from the test case file, in a
            form that is executed.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename class="directory">log</filename></term>

          <listitem>
            <para>Various logs.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>This structure is constructed for each test case. It resides in a
      directory called the <firstterm>execution directory
      root</firstterm>.</para>

      <para>The program needs to know where to construct this structure. For
      this purpose, two values are used: a directory where temporary files can
      be created, and, inside that directory, a unique directory for the
      current test case:</para>

      <remark>Se över nedanstående (ev även ovanstående). Tror det skrevs
      innan det var bestämt hur detta skulle skötas.</remark>

      <variablelist>
        <varlistentry>
          <term><glossterm>temporary root directory</glossterm></term>

          <listitem>
            <para>A directory where directories can be created and
            deleted.</para>

            <para>The default is the standard directory on the system for
            temporary files.</para>

            <variablelist>
              <varlistentry>
                <term><glossterm>test case temporary
                directory</glossterm></term>

                <listitem>
                  <para>The directory used for a single test case: the
                  directory that contains the <glossterm>execution directory
                  structure</glossterm>.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Execution Environment</title>

      <para>The directory <filename>test</filename>, in the
      <glossterm>execution directory structure</glossterm>, is the Current
      Working Directory, for initial instruction of all phases.</para>

      <section>
        <title>Environment variables</title>

        <variablelist>
          <varlistentry>
            <term><envar>SHELLTEST_HOME</envar></term>

            <listitem>
              <para>Absolute name of the home directory of the test
              case.</para>

              <para>Initialized to the directory where the test case file is
              located.</para>

              <para>Modified by the <command role="instruction">home</command>
              instruction in the test case.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><envar>SHELLTEST_TESTROOT</envar></term>

            <listitem>
              <para>Absolute name of the <filename
              class="directory">test</filename> directory in the
              <glossterm>execution directory structure</glossterm>.</para>

              <para>This is the Current Working Directory at the start of each
              phase.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>

    <section>
      <title>Forms of a Test Case used for executing it</title>

      <para>A test case that is given to the program for execution is
      transformed, in several steps, to a form that is suitable for execution
      inside the <glossterm>execution directory structure</glossterm>.</para>

      <para>The instructions in all phases except <systemitem>act</systemitem>
      are executed from within the <command>shelltest</command> executable.
      They are implemented completely in Python (shell commands are executed
      via Python).</para>

      <para>The phase <systemitem>apply</systemitem> is represented as a shell
      script named <filename>apply.sh</filename>, located in the <filename
      class="directory">testcase</filename> directory. The instructions in
      this phase generates shell script statements that are output to that
      file. <filename>apply.sh</filename> is executed from a second shell
      script file, <filename>main.sh</filename>. <filename>main.sh</filename>
      sets up environment variables, redirect input and output, etc.</para>
    </section>

    <section>
      <title>The Steps involved in executing a Test Case</title>

      <para>The execution of a test case is a process divided into several
      steps. Some of these steps are part of a transformation of the test case
      into a form suitable for execution inside the <glossterm>execution
      directory structure</glossterm>.</para>

      <para>The original test case is said to be the <glossterm>raw test
      case</glossterm>.</para>

      <orderedlist>
        <listitem>
          <para>Preprocess</para>

          <para>This is an optional step.</para>

          <para>The given preprocessor transforms the <glossterm>raw test
          case</glossterm> into the <glossterm>plain test
          case</glossterm>.</para>

          <para>If a preprocessor is not used, then the <glossterm>plain test
          case</glossterm> is identical to the <glossterm>raw test
          case</glossterm>.</para>

          <para>Fails with <glossterm>HARD ERROR</glossterm> if the
          preprocessor fails.</para>
        </listitem>

        <listitem>
          <para>Parse</para>

          <para>The <glossterm>plain test case</glossterm> is checked for
          syntax errors.</para>

          <para>Fails with <glossterm>HARD ERROR</glossterm> if the test case
          contains syntax errors.</para>

          <para><remark>How are these handled: invalid "commands", invalid
          options to a command? Would be nice if these could be detected in
          this step.</remark></para>
        </listitem>

        <listitem>
          <para>Construction of the <glossterm>execution directory
          structure</glossterm></para>
        </listitem>

        <listitem>
          <para>Generation of the <glossterm>executable test
          case</glossterm></para>

          <para>The <glossterm>executable test case</glossterm> is "installed"
          into the <glossterm>execution directory
          structure</glossterm>.</para>
        </listitem>

        <listitem>
          <para>Execution of the <glossterm>executable test
          case</glossterm></para>

          <para>All phases of the test case are executed.</para>
        </listitem>

        <listitem>
          <para>Destruction of the <glossterm>execution directory
          structure</glossterm></para>
        </listitem>
      </orderedlist>

      <para>This process can be halted after various steps for the purpose of
      experimenting and debugging a test case.</para>
    </section>
  </chapter>

  <chapter>
    <title>Implementation restrictions</title>

    <simplesect>
      <title>Language</title>

      <para>The program is written completely in Python, version 3.</para>
    </simplesect>

    <simplesect>
      <title>Dependencies</title>

      <para>No dependencies except on Python 3 and it's standard
      library.</para>

      <para>No external tools are used.</para>

      <para>No libraries except the Python 3 standard library are used.</para>
    </simplesect>
  </chapter>
</book>
