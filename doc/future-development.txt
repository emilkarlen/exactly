-*- org -*-

* Specify python actor executable via --python
<2016-12-22 tor>
same functionality as for the "run" instruction.

Is this useful?
* env: Assign the output from a shell command to an env var
<2016-12-22 tor>
A way to allow more complex expressions.
* Use other dir than "home" for referencing the SUT
<2016-12-17 lör>
Currently, "home" dir is used both for referencing test resources and the
executable sut file.
But test resources are related to test cases, but the sut is the same for many
test cases.  Thus it is probable that these will be located in different
places.
This means that a new configuration parameter for the path of the sut, should
be introduced.
* "fixture" as an alternative to "setup" + "cleanup"
<2016-03-22 tis>
Ett "fixture" består av en setup-action och en cleanup-action.

setup-action:en körs på liknande sättt som "setup", och
cleanup-actionen:en körs liknande "cleanup".

Fördelen skulle vara problemet med att synka setup och cleanup:
Om det är flera saker som ska sättas upp m setup, och någon av dessa
misslyckas så körs "cleanup" för att rensa upp.  Problemet är att veta hur
många saker "setup"-fasen hunnit sätta upp - och alltså vad som behöver
städas.

Iom att en "fixture" är en enhet som innehåller båda delarna så vet man att
det är de fixture vars setup exekverats som behöver cleanup.

Typ lyckad exekvering av en fixtures setup-sak registrerar dess cleanup-sak
för senare exekvering.  fixtures som inte "hinner" exekveras därför att
tidigare fixtures misslyckas med setup kommer då inte att registrera någon
cleanup-sak.

Skulle t ex kunna implementeras i testfall genom att fixturen är ett program
som användaren anger.  Under setup-fasen (el motsvarande) så körs programmet
med argumentet "setup".  Och under cleanup-fasen (el motsvarande) så körs
programmet m argumentet "cleanup".

"fixture" skulle kunna komplettera "setup" + "cleanup".
* Multiple case-files on the command line should run implicit suite
Möjlighet att ange "anonym" testsvit genom att ange de testfall som ska ingå
på kommandoraden.
Argumenten som ger inställningar för testfall (t ex preprocessor,
act-program-executor) kan hanteras som inställningar för sviten.

Programmet ska köra, och rapportera, som om en svit angivits som innehöll de
givna fallen.
* Instruction for dir+file strucuture
<2015-11-04 ons>

It would be nice to be make it easy to make a file structure.

The question is what format is best.
One way is to use the "dir" instruction, and make it include "dir" and "file"
instructions that follows and are indented:

dir my-dir
  file a-file
  dir sub-dir
    file with-content.txt <<EOF
contents
EOF
    file empty-file.txt
  dir empty-dir


På liknande sätt som jag gör i Python:
DirContents([File('f','contents'], Dir('d', [...]))

Vore ju bekvämt om det fanns en liknande notation för filer att installera.
Då skulle man slippa ha dem i filsystemet, i de fall det inte är nödvändigt av
andra orsaker.

Kruxet är bra syntax.
Alternativ:
 - egendefinierad
 - JSON
 - XML

T ex
----------------------------------------
[setup]
file-structure --xml <<EOF
<contents>
  <file name="empty-file"/>
  <file name="g" timestamp="2015-11-03 10:20:30"/>
  <file name="non-empty">contents of file</file>
  <dir name="empty-dir"/>
  <dir name="non-empty-dir">
    <file name="f"/>
  </dir>
<contents>
EOF
----------------------------------------

Ev kunde ett antal xml entities sättas så att de fanns att tillgå, på ung
samma sätt som med omgivningsvariabler.


assert/JÄMFÖRELSE
Vore naturligtvis även användbart att kunna asserta att innehållet i en
katalog är identiskt (el innehåller som minst) en sådan hårdkodad filstruktur.
* Have setup in test suites
<2016-12-22 tor>
Both variants are usefull:
  - setup that is executed once for each test case (thus included in each tc)
  - setup that is executed once for the whole suite:
    [setup] and [cleanup] of the suite
* suite: default values for configuration parameters
<2016-12-22 tor>
Any instruction in the test case "conf" phase could be possible to use in test
suites, and would provide defaults to test cases.
* run a test case with setup/conf from a suite
<2016-12-22 tor>
Since it is possible to configure how a test case is executed in a test suite,
there is a problem of executing the test case on it's own, since the conf from
the suite will not be used.

A solution is to reference a suite on the command line:

> exactly --suite the.suite the.case

This would make all conf from the suite used.
